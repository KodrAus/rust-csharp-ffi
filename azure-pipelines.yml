jobs:

# linux-x64 build
- job: LinuxBuild
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: |
      sudo apt-get update && sudo apt-get install -y clang-3.9 libcurl4-openssl-dev zlib1g-dev libkrb5-dev
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
  - task: UseDotNet@2
    inputs:
      packageType: sdk
      version: 3.x
      includePreviewVersions: true
      installationPath: $(Agent.ToolsDirectory)/dotnet
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
  - script: sudo npm install -g @angular/cli && sudo chown -R $(whoami) ~/.npm

  - powershell: ci/linux-x64.ps1

# osx-x64 build
- job: OSXBuild
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
  - task: UseDotNet@2
    inputs:
      packageType: sdk
      version: 3.x
      includePreviewVersions: true
      installationPath: $(Agent.ToolsDirectory)/dotnet
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
  - script: npm install -g @angular/cli

  - powershell: ci/osx-x64.ps1

# win-x64 build
- job: WindowsBuild
  pool:
    vmImage: 'vs2017-win2016'
  variables:
    rustflags: '-C target-feature=+crt-static'
  steps:
  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-toolchain nightly
  - task: UseDotNet@2
    inputs:
      packageType: sdk
      version: 3.x
      includePreviewVersions: true
      installationPath: $(Agent.ToolsDirectory)/dotnet
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
  - powershell: npm install -g @angular/cli

  - powershell: |
      $env:PATH = "$env:PATH;$env:USERPROFILE\.cargo\bin"
      ./ci/win-x64.ps1
